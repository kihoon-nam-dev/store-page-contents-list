{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ContentsList","props","className","src","content","imagePath","width","height","creator","title","price","App","state","useSelector","useState","contentsList","chgContentsList","loading","chgLoading","initPricingOptions","name","value","isChecked","pricingOptions","chgPricingOptions","dispatch","useDispatch","useCallback","contentsListReducer","searchFilterReducer","console","log","hasFilter","Object","values","reduce","result","Boolean","ids","entities","items","map","id","filter","entity","entries","key","useEffect","axios","get","then","res","data","catch","class","InputGroup","Text","pricingOption","i","cn","onClick","copy","type","SET_FILTER","payload","filterName","CANCEL_SET_FILTER","Button","variant","RESET_FILTER","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_CONTENTSLIST","initContentsList","initSearchFilter","store","createStore","combineReducers","action","finalEntities","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b614fa9.chunk.js","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputGroup, Button } from 'react-bootstrap';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n} from 'react-icons/md';\nimport cn from 'classnames';\nimport './App.scss';\nimport { SET_CONTENTSLIST, SET_FILTER, RESET_FILTER, CANCEL_SET_FILTER } from './index.js';\n\nimport axios from 'axios';\n\nfunction App() {\n  var state = useSelector((state) => state);\n  let [contentsList, chgContentsList] = useState([]);\n  let [loading, chgLoading ] = useState(true);\n  let initPricingOptions = [\n    {\n      name : \"PAID\",\n      value : 0,\n      isChecked : false\n    },\n    {\n      name : \"FREE\",\n      value : 1,\n      isChecked : false\n    },\n    {\n      name : \"VIEW_ONLY\",\n      value : 2,\n      isChecked : false\n    }\n  ];\n  let [pricingOptions, chgPricingOptions] = useState(initPricingOptions);\n  let dispatch = useDispatch();\n  \n  const searchResultTable = useCallback(\n    state => {\n      const { contentsListReducer, searchFilterReducer } = state;\n      console.log(\"contentsListReducer : \", contentsListReducer);\n      console.log(\"searchFilterReducer : \", searchFilterReducer);\n      const hasFilter = Object.values(searchFilterReducer).reduce((result, value) => result || Boolean(value), false);\n      const { ids, entities } = contentsListReducer;\n      const items = ids\n        .map(id => entities[id])\n        .filter(\n          entity =>\n            !hasFilter ||\n            Object.entries(searchFilterReducer).reduce(\n              (result, [key, value]) => result && (!value || `${entity[key]}` === `${value}`),\n              true,\n            ),\n        );\n      \n      console.log(\"items : \", items);\n      chgContentsList(items);\n    }\n  ) \n\n  useEffect(() => {\n    axios.get('https://closet-sample.azurewebsites.net/api/data')\n    .then((res) => {\n      \n      //chgContentsList([res.data]);\n      //console.log(\"1.contentsList:\",contentsList);\n      // var arr = localStorage.getItem('contentsList');\n      // if(arr == null) {\n      //     arr = []\n      // } else {\n      //     arr = JSON.parse(arr);\n      // }\n\n      // arr.push(contentsList);\n\n      // localStorage.setItem('contentsList', JSON.stringify(arr));\n\n      //dispatch({ type: SET_CONTENTSLIST, payload: [res.data] })\n      chgContentsList([...res.data])\n      chgLoading(false);\n      console.log(\"1.beforeSearchResultTable : \", state);\n      //searchResultTable(state);\n      console.log(\"1.afterSearchResultTable : \", state);\n    })\n    .catch(() => {\n      chgLoading(false);\n      console.log(\"Failed.\");\n    })  \n  },[]);\n\n  // useEffect(() => {\n  //   console.log(\"2.beforeSearchResultTable : \", state);\n  //   searchResultTable(state);\n  //   console.log(\"2.afterSearchResultTable : \", state);\n  //   console.log(\"contentsList : \", contentsList);\n  // },[pricingOptions]);\n  \n  return (\n    <div className=\"App\">\n      {/* Nav area */}\n      <nav className=\"navbar navbar-light bg-light\">\n        <span className=\"navbar-brand mb-0 h1\" class = \"text-success\">Connect</span>\n      </nav>\n\n      {/* Contents Filter area */}\n      <div className=\"container\">\n        <p class = \"text-success\">① Contents Filter</p>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"inputGroup-sizing-default\">Pricing Option</InputGroup.Text>\n          {       \n            pricingOptions.map((pricingOption,i) => {\n              return <div \n                key={i}\n                //className={cn('checkbox', { checked })} \n                className={cn('checkbox')} \n                onClick={() => { \n                  var copy = [...pricingOptions];\n                  copy[i].isChecked = !copy[i].isChecked;\n                  copy[i].isChecked ? \n                    dispatch({ type: SET_FILTER, payload : { filterName: \"pricingOption\", value: copy[i].value }})\n                    : dispatch({ type: CANCEL_SET_FILTER, payload : { filterName: copy[i].name, value: copy[i].isChecked }});\n\n                  chgPricingOptions(copy);\n                  //searchResultTable(state);\n                }}>\n                {pricingOption.isChecked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n                <div className=\"text\">{pricingOption.name}</div>\n              </div>\n            })\n          }\n          <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={() => { \n            chgPricingOptions(initPricingOptions);\n            dispatch({ type: RESET_FILTER })\n          }}>\n            RESET\n          </Button>\n        </InputGroup>\n      </div>\n      \n      {/* Contents list area */}\n      <div className=\"container\">\n        <p class = \"text-success\">② Contents List</p>\n        <div className=\"row\">\n          {       \n            loading === true ? \n              <div><h4>Loading...</h4></div> \n              :\n              contentsList.map((content, i) => {\n                return <ContentsList content={content} i={i} key={i}/>\n              })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n  \n\nfunction ContentsList(props) {\n  return (\n      <div className=\"col-md-4\">\n        <img src={props.content.imagePath} width=\"100%\" height=\"70%\"/>\n        <h4>{ props.content.creator }</h4>\n        <p> { props.content.title } | $ { props.content.price } </p>\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nexport const SET_CONTENTSLIST = 'contentsListReducer/SET_CONTENTSLIST';\nexport const SET_FILTER = 'searchFilterReducer/SET_FILTER';\nexport const CANCEL_SET_FILTER = 'searchFilterReducer/CANCEL_SET_FILTER';\nexport const RESET_FILTER = 'searchFilterReducer/RESET_FILTER';\n\nconst initContentsList = {\n  ids: [],\n  entities: {},\n};\nconst initSearchFilter = {};\n\nfunction contentsListReducer(state = initContentsList, action) {\n  \n  const { type, payload } = action;\n  \n  switch (type) {\n    case SET_CONTENTSLIST : {\n      const ids = payload.map((entity) => entity['id']);\n\n      const entities = payload.reduce((finalEntities, entity) => ({\n        ...finalEntities,\n        [entity['id']]: entity,\n      }), {});\n      return { ...state, ids, entities };\n    }\n\n    default:\n      return state;\n  }\n}\n\nfunction searchFilterReducer(state = initSearchFilter, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_FILTER : {\n      const { filterName, value } = payload;\n      return {\n        ...state, \n        [filterName]: value,\n      }\n    }\n    case RESET_FILTER: {\n      return initSearchFilter;\n    }\n    default:\n      return state;\n  }\n}\n\nvar store = createStore(combineReducers({contentsListReducer, searchFilterReducer},composeWithDevTools()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}